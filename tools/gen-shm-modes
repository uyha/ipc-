#!/usr/bin/env python3

from itertools import permutations
from gen_permutations import gen_permutations

modes = {
    "ReadOnly": "O_RDONLY",
    "ReadWrite": "O_RDWR",
    "Create": "O_CREAT",
    "Exclusive": "O_EXCL",
    "Truncate": "O_TRUNC",
}

case_sets = [
    ["ReadOnly", "Create", "Exclusive"],
    ["ReadWrite", "Create", "Exclusive", "Truncate"],
]

print(
    """#include <catch2/catch.hpp>
#include <lpipp/shm.hpp>

using namespace lpipp;
using namespace shm_constants;

TEST_CASE("shared memeory open mode bitor operations") {"""
)

for permutation, case in gen_permutations(case_sets):
    print(
        f"""  CHECK(static_cast<std::uint32_t>({" | ".join(permutation)}) == static_cast<std::uint32_t>({" | ".join(map(modes.__getitem__, case))}));"""
    )

print("}")
