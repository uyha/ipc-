#!/usr/bin/env python3

from itertools import permutations
from gen_permutations import gen_permutations

modes = {
    "ReadOnly": "O_RDONLY",
    "Create": "O_CREAT",
    "Exclusive": "O_EXCL",
    "CloseOnExec": "O_CLOEXEC",
    "Nonblock": "O_NONBLOCK",
}

case_sets = [
    ["ReadOnly", "Create", "Exclusive", "CloseOnExec", "Nonblock"],
]

print(
    """#include <catch2/catch.hpp>
#include <lpipp/mq.hpp>

using namespace lpipp::mq_constants;

TEST_CASE("open mode combinations") {
"""
)

for permutation, case in gen_permutations(case_sets):
    print(
        f"""  CHECK(static_cast<int>({" | ".join(permutation)}) == ({" | ".join(map(modes.__getitem__, case))}));"""
    )

print("}")
