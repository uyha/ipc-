#!/usr/bin/env python3

from itertools import permutations
from gen_permutations import gen_permutations

modes = {
    "read_only": "O_RDONLY",
    "create": "O_CREAT",
    "exclusive": "O_EXCL",
    "close_on_exec": "O_CLOEXEC",
    "nonblock": "O_NONBLOCK",
}

case_sets = [
    ["read_only", "create", "exclusive", "close_on_exec", "nonblock"],
]

print(
    """#include <catch2/catch.hpp>
#include <lpipp/mq.hpp>

using namespace lpipp::mq_constants;

TEST_CASE("open mode combinations") {
"""
)

for permutation, case in gen_permutations(case_sets):
    print(
        f"""  CHECK(static_cast<int>({" | ".join(permutation)}) == ({" | ".join(map(modes.__getitem__, case))}));"""
    )

print("}")
