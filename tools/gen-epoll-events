#!/usr/bin/env python3

from itertools import permutations
from gen_permutations import gen_permutations

modes = {
    "In": "EPOLLIN",
    "Out": "EPOLLOUT",
    "Rdhup": "EPOLLRDHUP",
    "Pri": "EPOLLPRI",
    "Wakeup": "EPOLLWAKEUP",
    "Et": "EPOLLET",
    "Oneshot": "EPOLLONESHOT",
    "Exclusive": "EPOLLEXCLUSIVE",
    "Err": "EPOLLERR",
    "Hup": "EPOLLHUP",
}

case_sets = [
    ["In", "Rdhup", "Wakeup", "Oneshot"],
    ["In", "Wakeup", "Exclusive"],
    ["In", "Rdhup", "Err"],
]

print(
    """#include <catch2/catch.hpp>
#include <lpipp/epoll.hpp>

using namespace lpipp;
using namespace epoll_constants;

TEST_CASE("epoll event bitor operations") {"""
)

for permutation, case in gen_permutations(case_sets):
    print(
        f"""  CHECK(static_cast<std::uint32_t>({" | ".join(permutation)}) == static_cast<std::uint32_t>({" | ".join(map(modes.__getitem__, case))}));"""
    )

print("}")
